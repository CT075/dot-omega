% $ biblatex auxiliary file $
% $ biblatex bbl format version 3.2 $
% Do not modify the above lines!
%
% This is an auxiliary file used by the 'biblatex' package.
% This file may safely be deleted. It will be recreated as
% required.
%
\begingroup
\makeatletter
\@ifundefined{ver@biblatex.sty}
  {\@latex@error
     {Missing 'biblatex' package}
     {The bibliography requires the 'biblatex' package.}
      \aftergroup\endinput}
  {}
\endgroup

\datalist[entry]{nty/global//global/global}
  \entry{amin2016}{inproceedings}{}
    \name{author}{5}{}{%
      {{hash=AN}{%
         family={Amin},
         familyi={A\bibinitperiod},
         given={Nada},
         giveni={N\bibinitperiod},
      }}%
      {{hash=GS}{%
         family={Gr{\"u}tter},
         familyi={G\bibinitperiod},
         given={Samuel},
         giveni={S\bibinitperiod},
      }}%
      {{hash=OM}{%
         family={Odersky},
         familyi={O\bibinitperiod},
         given={Martin},
         giveni={M\bibinitperiod},
      }}%
      {{hash=RT}{%
         family={Rompf},
         familyi={R\bibinitperiod},
         given={Tiark},
         giveni={T\bibinitperiod},
      }}%
      {{hash=SS}{%
         family={Stucki},
         familyi={S\bibinitperiod},
         given={Sandro},
         giveni={S\bibinitperiod},
      }}%
    }
    \strng{namehash}{AN+1}
    \strng{fullhash}{ANGSOMRTSS1}
    \field{labelnamesource}{author}
    \field{labeltitlesource}{title}
    \field{sortinit}{A}
    \field{sortinithash}{A}
    \field{booktitle}{A List of Successes That Can Change the World}
    \field{title}{The Essence of Dependent Object Types}
    \field{year}{2016}
  \endentry

  \entry{rapoport2017}{article}{}
    \name{author}{4}{}{%
      {{hash=RM}{%
         family={Rapoport},
         familyi={R\bibinitperiod},
         given={Marianna},
         giveni={M\bibinitperiod},
      }}%
      {{hash=KI}{%
         family={Kabir},
         familyi={K\bibinitperiod},
         given={Ifaz},
         giveni={I\bibinitperiod},
      }}%
      {{hash=HP}{%
         family={He},
         familyi={H\bibinitperiod},
         given={Paul},
         giveni={P\bibinitperiod},
      }}%
      {{hash=LO}{%
         family={Lhot\'{a}k},
         familyi={L\bibinitperiod},
         given={Ond\v{r}ej},
         giveni={O\bibinitperiod},
      }}%
    }
    \list{publisher}{1}{%
      {Association for Computing Machinery}%
    }
    \keyw{Scala, type safety, dependent object types, DOT calculus}
    \strng{namehash}{RM+1}
    \strng{fullhash}{RMKIHPLO1}
    \field{labelnamesource}{author}
    \field{labeltitlesource}{title}
    \field{sortinit}{R}
    \field{sortinithash}{R}
    \field{abstract}{%
    Dependent Object Types (DOT) is intended to be a core calculus for
  modelling Scala. Its distinguishing feature is abstract type members, fields
  in objects that hold types rather than values. Proving soundness of DOT has
  been surprisingly challenging, and existing proofs are complicated, and
  reason about multiple concepts at the same time (e.g. types, values,
  evaluation). To serve as a core calculus for Scala, DOT should be easy to
  experiment with and extend, and therefore its soundness proof needs to be
  easy to modify. This paper presents a simple and modular proof strategy for
  reasoning in DOT. The strategy separates reasoning about types from other
  concerns. It is centred around a theorem that connects the full DOT type
  system to a restricted variant in which the challenges and paradoxes caused
  by abstract type members are eliminated. Almost all reasoning in the proof is
  done in the intuitive world of this restricted type system. Once we have the
  necessary results about types, we observe that the other aspects of DOT are
  mostly standard and can be incorporated into a soundness proof using familiar
  techniques known from other calculi.%
    }
    \verb{doi}
    \verb 10.1145/3133870
    \endverb
    \field{number}{OOPSLA}
    \field{title}{A Simple Soundness Proof for Dependent Object Types}
    \verb{url}
    \verb https://doi.org/10.1145/3133870
    \endverb
    \field{volume}{1}
    \list{location}{1}{%
      {New York, NY, USA}%
    }
    \field{journaltitle}{Proc. ACM Program. Lang.}
    \field{year}{2017}
    \warn{\item Invalid format of field 'month'}
  \endentry
\enddatalist
\endinput
